2019-07-22 16:56:39,942 ERROR: Exception on / [GET] [in c:\users\samuel\microblog4\venv\lib\site-packages\flask\app.py:1761]
Traceback (most recent call last):
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask\app.py", line 2292, in wsgi_app
    response = self.full_dispatch_request()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask\app.py", line 1815, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask\app.py", line 1718, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask\_compat.py", line 35, in reraise
    raise value
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask\app.py", line 1811, in full_dispatch_request
    rv = self.preprocess_request()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask\app.py", line 2087, in preprocess_request
    rv = func()
  File "C:\Users\Samuel\microblog4\app\routes.py", line 14, in before_request
    if current_user.is_authenticated:
  File "c:\users\samuel\microblog4\venv\lib\site-packages\werkzeug\local.py", line 348, in __getattr__
    return getattr(self._get_current_object(), name)
  File "c:\users\samuel\microblog4\venv\lib\site-packages\werkzeug\local.py", line 307, in _get_current_object
    return self.__local()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask_login\utils.py", line 26, in <lambda>
    current_user = LocalProxy(lambda: _get_user())
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask_login\utils.py", line 335, in _get_user
    current_app.login_manager._load_user()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask_login\login_manager.py", line 359, in _load_user
    return self.reload_user()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask_login\login_manager.py", line 321, in reload_user
    user = self.user_callback(user_id)
  File "C:\Users\Samuel\microblog4\app\models.py", line 81, in load_user
    return Users.query.get(int(id))
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask_sqlalchemy\__init__.py", line 512, in __get__
    mapper = orm.class_mapper(type)
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\orm\base.py", line 441, in class_mapper
    mapper = _inspect_mapped_class(class_, configure=configure)
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\orm\base.py", line 420, in _inspect_mapped_class
    mapper._configure_all()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\orm\mapper.py", line 1337, in _configure_all
    configure_mappers()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\orm\mapper.py", line 3229, in configure_mappers
    mapper._post_configure_properties()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\orm\mapper.py", line 1947, in _post_configure_properties
    prop.init()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\orm\interfaces.py", line 196, in init
    self.do_init()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\orm\relationships.py", line 1854, in do_init
    self._setup_join_conditions()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\orm\relationships.py", line 1934, in _setup_join_conditions
    can_be_synced_fn=self._columns_are_mapped,
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\orm\relationships.py", line 2241, in __init__
    self._annotate_fks()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\orm\relationships.py", line 2472, in _annotate_fks
    self._annotate_present_fks()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\orm\relationships.py", line 2526, in _annotate_present_fks
    self.primaryjoin, {}, {"binary": visit_binary}
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\sql\visitors.py", line 312, in cloned_traverse
    obj = clone(obj)
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\sql\visitors.py", line 308, in clone
    meth(newelem)
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\orm\relationships.py", line 2516, in visit_binary
    col = is_foreign(binary.left, binary.right)
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\orm\relationships.py", line 2495, in is_foreign
    if a.references(b):
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\sql\schema.py", line 1409, in references
    if fk.column.proxy_set.intersection(column.proxy_set):
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 855, in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\sql\schema.py", line 2025, in column
    tablekey,
sqlalchemy.exc.NoReferencedTableError: Foreign key associated with column 'followers.follower_id' could not find table 'user' with which to generate a foreign key to target column 'id'
2019-07-22 16:56:47,491 ERROR: Exception on /favicon.ico [GET] [in c:\users\samuel\microblog4\venv\lib\site-packages\flask\app.py:1761]
Traceback (most recent call last):
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask\app.py", line 2292, in wsgi_app
    response = self.full_dispatch_request()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask\app.py", line 1815, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask\app.py", line 1718, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask\_compat.py", line 35, in reraise
    raise value
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask\app.py", line 1811, in full_dispatch_request
    rv = self.preprocess_request()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask\app.py", line 2087, in preprocess_request
    rv = func()
  File "C:\Users\Samuel\microblog4\app\routes.py", line 14, in before_request
    if current_user.is_authenticated:
  File "c:\users\samuel\microblog4\venv\lib\site-packages\werkzeug\local.py", line 348, in __getattr__
    return getattr(self._get_current_object(), name)
  File "c:\users\samuel\microblog4\venv\lib\site-packages\werkzeug\local.py", line 307, in _get_current_object
    return self.__local()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask_login\utils.py", line 26, in <lambda>
    current_user = LocalProxy(lambda: _get_user())
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask_login\utils.py", line 335, in _get_user
    current_app.login_manager._load_user()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask_login\login_manager.py", line 359, in _load_user
    return self.reload_user()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask_login\login_manager.py", line 321, in reload_user
    user = self.user_callback(user_id)
  File "C:\Users\Samuel\microblog4\app\models.py", line 81, in load_user
    return Users.query.get(int(id))
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask_sqlalchemy\__init__.py", line 512, in __get__
    mapper = orm.class_mapper(type)
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\orm\base.py", line 441, in class_mapper
    mapper = _inspect_mapped_class(class_, configure=configure)
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\orm\base.py", line 420, in _inspect_mapped_class
    mapper._configure_all()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\orm\mapper.py", line 1337, in _configure_all
    configure_mappers()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\sqlalchemy\orm\mapper.py", line 3225, in configure_mappers
    raise e
sqlalchemy.exc.InvalidRequestError: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'mapped class Users->users'. Original exception was: Foreign key associated with column 'followers.follower_id' could not find table 'user' with which to generate a foreign key to target column 'id'
2019-07-22 17:00:09,782 INFO: Microblog startup [in C:\Users\Samuel\microblog4\app\__init__.py:53]
2019-07-22 17:00:16,595 ERROR: Exception on / [GET] [in c:\users\samuel\microblog4\venv\lib\site-packages\flask\app.py:1761]
Traceback (most recent call last):
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask\app.py", line 2292, in wsgi_app
    response = self.full_dispatch_request()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask\app.py", line 1815, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask\app.py", line 1718, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask\_compat.py", line 35, in reraise
    raise value
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask\app.py", line 1813, in full_dispatch_request
    rv = self.dispatch_request()
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask\app.py", line 1799, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "c:\users\samuel\microblog4\venv\lib\site-packages\flask_login\utils.py", line 261, in decorated_view
    return func(*args, **kwargs)
  File "C:\Users\Samuel\microblog4\app\routes.py", line 32, in index
    page, app.config['POSTS_PER_PAGE'], False)
KeyError: 'POSTS_PER_PAGE'
2019-07-22 17:18:35,085 INFO: Microblog startup [in C:\Users\Samuel\microblog4\app\__init__.py:53]
2019-07-22 17:27:29,695 INFO: Microblog startup [in C:\Users\Samuel\microblog4\app\__init__.py:53]
